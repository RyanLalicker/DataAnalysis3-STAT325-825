---
title: "Data Analysis 3"
authors: 
  Maksuda Aktar Toma,
  Jo Charbonneau,
  Ryan Lalicker
date: today
date-format: long
execute: 
  echo: false
  warning: false
columns: 2
format:
  pdf: 
    fig-align: center
    fig-width: 6
    fig-height: 4
bibliography: references.bib
editor: 
  markdown: 
    wrap: sentence
---

```{r, , fig.pos="H"}
#| label: data-setup
#| echo: false
#| eval: true

library(knitr)
library(dplyr)
library(ggplot2)
library(naniar)
library(reshape2)
library(GGally)
library(janitor)
library(emmeans)
library(MASS)

data <- read.csv("data.csv")
# Placeholder of original data
origdata <- data
data <- data %>%
  mutate(across(everything(), ~ ifelse(. %in% c(".", ""), NA, .)))


```

```{r, , fig.pos="H"}
#| label: Scratch-work
#| echo: false
#| eval: false

length(unique(na.omit(data$Sire)))
length(unique(na.omit(data$Development.Treatment)))
sum(rowSums(is.na(data)) > 0)
rows_with_na <- sum(rowSums(is.na(data)) > 0)
unique_entries <- unique(data$Calan.Treatment)
num_unique <- length(unique_entries)
frequency_table <- table(data$Calan.Treatment)
```


# Introduction

In this paper we will be looking at data related to calves.  The data comes from an experiment designed to study the impact dietary treatments given to pregnant heifers had on the development of the calves.  The study was conducted over a three year period and involved three different dietary treatments given to select groups of heifers in the final trimester.  In total the data has 22 variables for 120 entries, though some data points are missing.

For more information on the experiment, the data, or any other files used in this paper see our [Github page](https://github.com/RyanLalicker/Data-Analysis-2-STAT-325-825) which can be found at https://github.com/RyanLalicker/Data-Analysis-2-STAT-325-825.  The coding languages used in the paper are R and SAS.  The corresponding code can be found in *Appendix A - R Code* and *Appendix B - SAS Code* respectively.


# Exploring the Data

## Variables

As mentioned above the experiment used three different dietary treatments.  These were DDG, CON, and MET.  For the first two trimesters the heifers were given one of seven developmental treatments, found in `Development.Treatment`, and then in the final trimester the each was given one of the three treatments mentioned above.  This is recorded in the `Calan.Treatment` column of the data set.  

The heifers were placed into one of four pens by weight, which can be seen in the column `Pen #`.  They were then artificially inseminated from an assigned sire, which we will assume was done randomly since the client says weight was not a factor.  The sire is represented by the column of the same name and has six unique entries.

Upon the birth of the calves, several measurements were taken.  These include the sex of the calf, weights taken at both birth and slaughter, and scores of both the calf's vigor and the ease of birth.  The variable names line up with these descriptions.

Other variables, such as the id of the calf, length of gestation for the heifer, and postmortem scoring such as hot carcass weight (HCW) are included as well.  (@UNLBeef).  Note two birthdays are included in the data, `Birth.date` and `Birth.date.1`.  These variables will not be used in the models below so no further investigation was done on our part to determine the differences.  

The client's main focus is the effect the third trimester treatment and the sex of a calf have on the calf's vigor score, ease of birth score, and final body weight.  Therefore, these are the variables we will place more of an emphasis on, while exploring the effect some of the other variables may have.


## Missing Values

**UPDATE THIS AFTER SEEING WHAT VARIABLES ARE NEEDED FOR THE MODEL**


The data contains some missing values. In total 53 rows in the data set are missing at lease one variable. @fig-missing-data shows which columns have the most missing data.  As we can see the values for the variable `DMI`, which according to the USDA represents the dry matter intake for a cow, is missing for two-thirds of the entries. (@USDA). Given the number of missing values is this large, it is probably best to not use this variable in our models.  Some other variables, including the final body weight of the calf represented by `Final.Calf.BW`, are missing in 19 entries.  Of the other four variables the client was most interested in, none have more than ten missing values.    

```{r, , fig.pos="H"}
#| label: fig-missing-data
#| fig-cap: "Chart counting the number of missing values for each variable within the data."
#| echo: false
#| eval: true

gg_miss_var(data) +
  ggtitle("Missing Data Distribution") +
  theme_minimal()

```




```{r, , fig.pos="H"}
#| label: fig-heatmap
#| fig-cap: "Heatmap of missing data."
#| echo: false
#| eval: true

# # Assuming your dataset is named `data`
# # Create a binary matrix indicating missing values
# missing_matrix <- is.na(data)
# 
# # Convert the missing matrix to a long format for visualization
# missing_data_long <- melt(missing_matrix)
# colnames(missing_data_long) <- c("Row", "Column", "Missing")
# 
# # Create the heatmap
# ggplot(missing_data_long, aes(x = Column, y = Row, fill = Missing)) +
#   geom_tile(color = "white") +
#   scale_fill_manual(values = c("FALSE" = "grey", "TRUE" = "red"), 
#                     name = "Missing") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 90, hjust = 1),
#         axis.title.x = element_blank(),
#         axis.title.y = element_blank()) +
#   ggtitle("Missing Data Heatmap")


```


## Cleaning the Dataset

```{r,,fig.pos="H"}
#| label: quant-imputing
#| echo: false
#| eval: true

#colnames(data)

quant <- c("Pen..", "Initial.BW", 
           "Final.BW", "DMI", "ADG",
           "Gest.Length", "X1st.Calf.BW", 
           "Calving.Ease", "Calf.Vigor", "Final.Calf.BW", 
           "HCW", "REA", "YG", "BF")

for (var in quant) {
  data[[var]] <- as.numeric(data[[var]])
  data[[var]][is.na(data[[var]])] <- median(data[[var]], na.rm = TRUE)
}

for (var in names(df)) {
  if (!(var %in% quant_vars)) {
    df[[var]] <- as.character(df[[var]])
  }
}

```

To clean up the data set let's first focus on some of the quantitative variables.  For these we can impute the missing values with the median or mean.  We will use the median due to the its greater resistance to potential outliers.  This reduces the number of rows with at least one missing variable to 15.  Much of the improvement comes from `DMI` being a quantitative variable, but to reiterate what was discussed earlier, this variable will not be used in any models.

**RYAN SAYS NO IMPUTING CATEGORICAL VARS TOMA SAYS USE MODE - WE NEED TO PICK ONE**

The categorical variables are not as simple.  Let's consider the third trimester treatment.  The MET treatment was used in 40 cases, while the other two treatments were only used 38 times, meaning there are four missing values.  If we used the mode as @MEMON2023101382 suggests, this would make 42 instances of the MET treatment.  However, it seems very possible that the missing entries were split between the CON and DDG treatments to make an even 40 uses each.  For this reason, rows with missing values for the categorical variables used in the model will be removed.  This results in the models using 113 entries of the original 120, which is something we are comfortable with.

**RETURN AND VARIFY NUMBERS BEFORE SUBMITTING.**

```{r,,fig.pos="H"}
#| label: cat-cutting
#| echo: false
#| eval: true

#colnames(data)
cat_used <- c("Calan.Treatment", "SEX")
cleaned_data <- data[complete.cases(data[, cat_used]), ]

```



## Summary Statistics


```{r, , fig.pos="H"}
#| label: fig-summarystats
#| echo: false
#| eval: true

# Summary statistics for numerical variables
summary_stats_num <- cleaned_data %>%
  summarise(across(where(is.numeric), list(mean = mean, sd = sd, min = min, max = max, median = median), na.rm = TRUE))

# Summary statistics for categorical variables
summary_stats_cat <- cleaned_data %>%
  summarise(across(where(is.factor), ~ n_distinct(.)))

print("Summary Statistics for Numerical Variables")
print(summary_stats_num)
print("Summary Statistics for Categorical Variables")
print(summary_stats_cat)

```


## Exploring the Data

```{r, , fig.pos="H"}
#| label: normality
#| echo: false
#| eval: true
#| layout-ncol: 4
#| layout-nrow: 5

# Select numerical variables
numeric_vars <- cleaned_data %>% select_if(where(is.numeric))

# Plot histograms for all numerical variables
for (col in colnames(numeric_vars)) {
  p <- ggplot(cleaned_data, aes_string(x = col)) +
    geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
    labs(title = paste("Distribution of", col), x = col, y = "Frequency") +
    theme_minimal() +
    theme(plot.title = element_text(hjust = 0.5))
  
  # Explicitly print the plot
  print(p)
}


```

```{r, , fig.pos="H"}
#| label: fig-exploratory-plots
#| echo: false
#| eval: TRUE
#| layout-ncol: 2
#| layout-nrow: 2

## Toma data set
#data2 <- read.csv("imput_data.csv")

## Ryan data set
data2 <- cleaned_data

# Cross-tabulation: Relationship between treatments and calf sex
crosstab_treatment_sex <- table(data2$Calan.Treatment, data2$SEX)
print(crosstab_treatment_sex)

# Boxplot: Final Body Weight by Treatment and Sex
ggplot(data2, aes(x = Calan.Treatment, y = Final.BW, fill = SEX)) +
  geom_boxplot(outlier.color = "red", alpha = 0.7) +
  labs(title = "Final Body Weight by Treatment and Sex", x = "Treatment", y = "Final Body Weight") +
  theme_minimal()

# Scatterplot: Calf Vigor vs. Final Body Weight
ggplot(data2, aes(x = Calf.Vigor, y = Final.BW, color = SEX, shape = Calan.Treatment)) +
  geom_point(size = 3, alpha = 0.7) +
  labs(title = "Scatterplot of Calf Vigor vs. Final Body Weight", x = "Calf Vigor", y = "Final Body Weight") +
  theme_minimal()

# Scatterplot: Calving Ease vs. Final Body Weight
ggplot(data2, aes(x = Calving.Ease, y = Final.BW, color = SEX, shape = Calan.Treatment)) +
  geom_point(size = 3, alpha = 0.7) +
  labs(title = "Scatterplot of Calving Ease vs. Final Body Weight", x = "Calving Ease", y = "Final Body Weight") +
  theme_minimal()

```

# Potential models

## Model 1 - ANCOVA Model

```{r, , fig.pos="H"}
#| label: fig-ANCOVA-1
#| echo: false
#| eval: true
#| layout-ncol: 2
#| layout-nrow: 2

# Fit ANCOVA model
ancova_model <- lm(Final.BW ~ Calan.Treatment * SEX + Initial.BW, data = data2)

# Summarize the model
summary(ancova_model)

# Check assumptions
plot(ancova_model)

```

**Post Hoc Test**
```{r, , fig.pos="H"}
#| label: fig-ANCOVA-2
#| echo: false
#| eval: true

# Estimated marginal means and pairwise comparisons
emm <- emmeans(ancova_model, ~ Calan.Treatment | SEX)
pairs(emm)

```

## Model 2 - OLR Model

```{r, , fig.pos="H"}
#| label: fig-OLR-Model
#| echo: false
#| eval: true

# Convert Calf.Vigor to an ordered factor
data$Calf.Vigor <- factor(data$Calf.Vigor, ordered = TRUE)

# Fit the ordinal logistic regression model
vigor_model <- polr(Calf.Vigor ~ Calan.Treatment * SEX + Initial.BW, data = data, Hess = TRUE)

# Summarize the model
summary(vigor_model)

# Extract p-values for the coefficients
coefs <- coef(summary(vigor_model))
p_values <- pnorm(abs(coefs[, "t value"]), lower.tail = FALSE) * 2  # Two-tailed p-values
coefs <- cbind(coefs, "p-value" = p_values)
print(coefs)

```

## Model 3 - Binary Logistic Regression with GLM

```{r, , fig.pos="H"}
#| label: fig-Binary-log-reg-GLM
#| echo: false
#| eval: true

# Dichotomize Calf Vigor (example: low = 1, 2; high = 3, 4, 5)
data$Calf.Vigor.Binary <- ifelse(data$Calf.Vigor %in% c(1, 2), "Low", "High")
data$Calf.Vigor.Binary <- factor(data$Calf.Vigor.Binary, levels = c("Low", "High"))

# Fit binary logistic regression
vigor_model_glm <- glm(Calf.Vigor.Binary ~ Calan.Treatment * SEX + Initial.BW, 
                       data = data, 
                       family = binomial(link = "logit"))

# Summarize the model
summary(vigor_model_glm)

```


$$
y_{ijklmn} = ENTER-MODEL-HERE
$$

where $y_{ijklm}$ represents the *dependent variable*, ...

```![Picture of SAS Output](filename.png){width="3in"}```

# Conclusion

# Recomendation

\newpage

# References

::: {#refs}
:::

\newpage

# Appendix A - R Code

```{r, , fig.pos="H"}
#| label: appendix A
#| echo: true
#| eval: false

```

\newpage

# Appendix B - SAS Code

``` sas

```

\newpage

# Appendix C - Additional SAS Output



```![](filename.png)```
