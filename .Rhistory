ggplot(data, aes(x = Final.Calf.BW)) +
geom_histogram(binwidth = 20, color = "black", fill = "skyblue") +
labs(
x = "Starch Content",
y = "Frequency"
) +
theme_minimal()
ggplot(data, aes(sample = Final.Calf.BW)) +
stat_qq() +
stat_qq_line(color = "red") +
labs(
x = "Theoretical Quantiles",
y = "Sample Quantiles"
) +
theme_minimal()
bin_width <- 2*IQR(data$Final.Calf.BW)/(n(data$Final.Calf.BW))^(1/3)
IQR(data$Final.Calf.BW)
n(data$Final.Calf.BW)
length(data$Final.Calf.BW
length(data$Final.Calf.BW)
length(data$Final.Calf.BW)
bin_width <- 2*IQR(data$Final.Calf.BW)/(length(data$Final.Calf.BW))^(1/3)
bin_width <- round(2*IQR(data$Final.Calf.BW)/(length(data$Final.Calf.BW))^(1/3), 2)
#| label: fig-normality
#| echo: false
#| eval: true
#| fig-cap: "Plots used to check if the distribution of the final calf weight is normal."
#| fig-subcap:
#|  - "Histogram of final calf weight."
#|  - "Q-Q plot of final calf weight."
#| fig-width: 6
#| fig-height: 4
bin_width <- round(2*IQR(data$Final.Calf.BW)/(length(data$Final.Calf.BW))^(1/3), 2)
ggplot(data, aes(x = Final.Calf.BW)) +
geom_histogram(binwidth = bin_width, color = "black", fill = "skyblue") +
labs(
x = "Starch Content",
y = "Frequency"
) +
theme_minimal()
ggplot(data, aes(sample = Final.Calf.BW)) +
stat_qq() +
stat_qq_line(color = "red") +
labs(
x = "Theoretical Quantiles",
y = "Sample Quantiles"
) +
theme_minimal()
#| label: fig-normality
#| echo: false
#| eval: true
#| fig-cap: "Histograms of scoring variables."
#| layout-ncol: 2
#| fig-subcap:
#|  - "Histogram of calving ease."
#|  - "Histogram of calf vigor."
#| fig-width: 6
#| fig-height: 4
ggplot(data, aes(x = Calving.Ease)) +
geom_histogram(binwidth = bin_width, color = "black", fill = "skyblue") +
labs(
x = "Starch Content",
y = "Frequency"
) +
theme_minimal()
bin_width <- round(2*IQR(data$Calving.Ease)/(length(data$Calving.Ease))^(1/3), 2)
#| label: fig-normality
#| echo: false
#| eval: true
#| fig-cap: "Histograms of scoring variables."
#| layout-ncol: 2
#| fig-subcap:
#|  - "Histogram of calving ease."
#|  - "Histogram of calf vigor."
#| fig-width: 6
#| fig-height: 4
ggplot(data, aes(x = Calving.Ease)) +
geom_histogram(binwidth = 1, color = "black", fill = "skyblue") +
labs(
x = "Starch Content",
y = "Frequency"
) +
theme_minimal()
#| label: fig-normality
#| echo: false
#| eval: true
#| fig-cap: "Histograms of scoring variables."
#| layout-ncol: 2
#| fig-subcap:
#|  - "Histogram of calving ease."
#|  - "Histogram of calf vigor."
#| fig-width: 6
#| fig-height: 4
ggplot(data, aes(x = Calving.Ease)) +
geom_histogram(binwidth = 1, color = "black", fill = "skyblue") +
labs(
x = "Starch Content",
y = "Frequency"
) +
theme_minimal()
ggplot(data, aes(x = Calf.Vigor)) +
geom_histogram(binwidth = 1, color = "black", fill = "skyblue") +
labs(
x = "Starch Content",
y = "Frequency"
) +
theme_minimal()
#| label: data-setup
#| echo: false
#| eval: true
library(knitr)
library(dplyr)
library(ggplot2)
library(naniar)
library(reshape2)
library(GGally)
library(janitor)
library(emmeans)
library(MASS)
library(multcomp)
library(lme4)
library(nnet)
data <- read.csv("data.csv")
# Placeholder of original data
origdata <- data
data <- data %>%
mutate(across(everything(), ~ ifelse(. %in% c(".", ""), NA, .)))
#| label: quant-imputing
#| echo: false
#| eval: true
#colnames(data)
quant <- c("Pen..", "Initial.BW",
"Final.BW", "DMI", "ADG",
"Gest.Length", "X1st.Calf.BW",
"Calving.Ease", "Calf.Vigor", "Final.Calf.BW",
"HCW", "REA", "YG", "BF")
for (var in quant) {
data[[var]] <- as.numeric(data[[var]])
data[[var]][is.na(data[[var]])] <- median(data[[var]], na.rm = TRUE)
}
for (var in names(df)) {
if (!(var %in% quant_vars)) {
df[[var]] <- as.character(df[[var]])
}
}
#| label: cat-cutting
#| echo: false
#| eval: true
#colnames(data)
cat_used <- c("Calan.Treatment", "SEX")
cleaned_data <- data[complete.cases(data[, cat_used]), ]
#| label: fig-summary-stats
#| echo: false
#| eval: true
dep_vars <- c("Calving.Ease", "Calf.Vigor", "Final.Calf.BW")
custom_names <- c("Calving Ease", "Calf Vigor", "Final Calf Weight")
calc_stats <- function(var) {
mean_val <- mean(var, na.rm = TRUE)
median_val <- median(var, na.rm = TRUE)
sd_val <- sd(var, na.rm = TRUE)
quantiles <- quantile(var, probs = c(0.25, 0.75), na.rm = TRUE)
max <- max(var, na.rm = TRUE)
min <- min(var, na.rm = TRUE)
c(mean = mean_val, median = median_val, sd = sd_val, Q1 = quantiles[1], Q3 = quantiles[2], Min = min, Max = max)
}
summary_table <- t(sapply(dep_vars, function(var) calc_stats(cleaned_data[[var]])))
summary_table <- as.data.frame(summary_table)
kable(summary_table, col.names = c("Variable", "Mean", "Median", "SD", "25th Percentile", "75th Percentile", "Min", "Max"),
caption = "Summary Statistics for Dependent Variables")
#| label: fig-normality
#| echo: false
#| eval: true
#| fig-cap: "Plots used to check if the distribution of the final calf weight is normal."
#| layout-ncol: 2
#| fig-subcap:
#|  - "Histogram of final calf weight."
#|  - "Q-Q plot of final calf weight."
#| fig-width: 6
#| fig-height: 4
bin_width <- round(2*IQR(data$Final.Calf.BW)/(length(data$Final.Calf.BW))^(1/3), 2)
ggplot(data, aes(x = Final.Calf.BW)) +
geom_histogram(binwidth = bin_width, color = "black", fill = "skyblue") +
labs(
x = "Weight",
y = "Frequency"
) +
theme_minimal()
ggplot(data, aes(sample = Final.Calf.BW)) +
stat_qq() +
stat_qq_line(color = "red") +
labs(
x = "Theoretical Quantiles",
y = "Sample Quantiles"
) +
theme_minimal()
#| label: fig-scoring-dist
#| echo: false
#| eval: true
#| fig-cap: "Histograms of scoring variables."
#| layout-ncol: 2
#| fig-subcap:
#|  - "Histogram of calving ease."
#|  - "Histogram of calf vigor."
#| fig-width: 6
#| fig-height: 4
ggplot(data, aes(x = Calving.Ease)) +
geom_histogram(binwidth = 1, color = "black", fill = "skyblue") +
labs(
x = "Ease Score",
y = "Frequency"
) +
theme_minimal()
ggplot(data, aes(x = Calf.Vigor)) +
geom_histogram(binwidth = 1, color = "black", fill = "skyblue") +
labs(
x = "Vigor Score",
y = "Frequency"
) +
theme_minimal()
# Load necessary libraries
library(ggplot2)
library(gridExtra)
# Boxplot for Final Body Weight by Treatment
plot1 <- ggplot(data2, aes(x = Calan.Treatment, y = Final.BW, fill = Calan.Treatment)) +
geom_boxplot(outlier.color = "red", alpha = 0.7) +
labs(title = "Boxplot of Final Body Weight by Treatment", x = "Treatment", y = "Final BW") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
#| label: fig-exploratory-plots
#| echo: false
#| eval: TRUE
#| layout-ncol: 2
#| layout-nrow: 2
## Toma data set
#data2 <- read.csv("imput_data.csv")
## Ryan data set
data2 <- cleaned_data
# Cross-tabulation: Relationship between treatments and calf sex
crosstab_treatment_sex <- table(data2$Calan.Treatment, data2$SEX)
print(crosstab_treatment_sex)
# Boxplot: Final Body Weight by Treatment and Sex
ggplot(data2, aes(x = Calan.Treatment, y = Final.BW, fill = SEX)) +
geom_boxplot(outlier.color = "red", alpha = 0.7) +
labs(title = "Final Body Weight by Treatment and Sex", x = "Treatment", y = "Final Body Weight") +
theme_minimal()
# Scatterplot: Calf Vigor vs. Final Body Weight
ggplot(data2, aes(x = Calf.Vigor, y = Final.BW, color = SEX, shape = Calan.Treatment)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "Scatterplot of Calf Vigor vs. Final Body Weight", x = "Calf Vigor", y = "Final Body Weight") +
theme_minimal()
# Scatterplot: Calving Ease vs. Final Body Weight
ggplot(data2, aes(x = Calving.Ease, y = Final.BW, color = SEX, shape = Calan.Treatment)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "Scatterplot of Calving Ease vs. Final Body Weight", x = "Calving Ease", y = "Final Body Weight") +
theme_minimal()
#| label: fig-box-1
#| echo: false
#| eval: true
#| fig-cap: "Final body weight by treatment and sex."
#| fig-width: 6
#| fig-height: 4
## Toma data set
#data2 <- read.csv("imput_data.csv")
## Ryan data set
data2 <- cleaned_data
ggplot(data2, aes(x = Calan.Treatment, y = Final.BW, fill = SEX)) +
geom_boxplot(outlier.color = "red", alpha = 0.7) +
labs(x = "Treatment", y = "Final Body Weight") +
theme_minimal()
#| label: fig-table
#| echo: false
#| eval: true
#| fig-cap: "Table showing the breakdown of treatment by sex."
## Toma data set
#data2 <- read.csv("imput_data.csv")
## Ryan data set
data2 <- cleaned_data
crosstab_treatment_sex <- table(data2$Calan.Treatment, data2$SEX)
crosstab_df <- as.data.frame(crosstab_treatment_sex)
kable(
crosstab_df,
col.names = c("Treatment", "Sex", "Count"))
#| label: fig-table
#| echo: false
#| eval: true
#| fig-cap: "Table showing the breakdown of treatment by sex."
## Toma data set
#data2 <- read.csv("imput_data.csv")
## Ryan data set
data2 <- cleaned_data
crosstab_treatment_sex <- table(data2$Calan.Treatment, data2$SEX)
crosstab_df <- as.data.frame(crosstab_treatment_sex)
kable(
crosstab_treatment_sex)
#| label: data-setup
#| echo: false
#| eval: true
library(knitr)
library(dplyr)
library(ggplot2)
library(naniar)
library(reshape2)
library(GGally)
library(janitor)
library(emmeans)
library(MASS)
library(multcomp)
library(lme4)
library(nnet)
library(gridExtra)
data <- read.csv("data.csv")
# Placeholder of original data
origdata <- data
data <- data %>%
mutate(across(everything(), ~ ifelse(. %in% c(".", ""), NA, .)))
#| label: fig-missing-data
#| fig-cap: "Chart counting the number of missing values for each variable within the data."
#| echo: false
#| eval: true
gg_miss_var(data) +
ggtitle("Missing Data Distribution") +
theme_minimal()
#| label: quant-imputing
#| echo: false
#| eval: true
#colnames(data)
quant <- c("Pen..", "Initial.BW",
"Final.BW", "DMI", "ADG",
"Gest.Length", "X1st.Calf.BW",
"Calving.Ease", "Calf.Vigor", "Final.Calf.BW",
"HCW", "REA", "YG", "BF")
for (var in quant) {
data[[var]] <- as.numeric(data[[var]])
data[[var]][is.na(data[[var]])] <- median(data[[var]], na.rm = TRUE)
}
for (var in names(df)) {
if (!(var %in% quant_vars)) {
df[[var]] <- as.character(df[[var]])
}
}
#| label: cat-cutting
#| echo: false
#| eval: true
#colnames(data)
cat_used <- c("Calan.Treatment", "SEX")
cleaned_data <- data[complete.cases(data[, cat_used]), ]
#| label: fig-summary-stats
#| echo: false
#| eval: true
dep_vars <- c("Calving.Ease", "Calf.Vigor", "Final.Calf.BW")
custom_names <- c("Calving Ease", "Calf Vigor", "Final Calf Weight")
calc_stats <- function(var) {
mean_val <- mean(var, na.rm = TRUE)
median_val <- median(var, na.rm = TRUE)
sd_val <- sd(var, na.rm = TRUE)
quantiles <- quantile(var, probs = c(0.25, 0.75), na.rm = TRUE)
max <- max(var, na.rm = TRUE)
min <- min(var, na.rm = TRUE)
c(mean = mean_val, median = median_val, sd = sd_val, Q1 = quantiles[1], Q3 = quantiles[2], Min = min, Max = max)
}
summary_table <- t(sapply(dep_vars, function(var) calc_stats(cleaned_data[[var]])))
summary_table <- as.data.frame(summary_table)
kable(summary_table, col.names = c("Variable", "Mean", "Median", "SD", "25th Percentile", "75th Percentile", "Min", "Max"),
caption = "Summary Statistics for Dependent Variables")
#| label: fig-normality
#| echo: false
#| eval: true
#| fig-cap: "Plots used to check if the distribution of the final calf weight is normal."
#| layout-ncol: 2
#| fig-subcap:
#|  - "Histogram of final calf weight."
#|  - "Q-Q plot of final calf weight."
#| fig-width: 6
#| fig-height: 4
bin_width <- round(2*IQR(data$Final.Calf.BW)/(length(data$Final.Calf.BW))^(1/3), 2)
ggplot(data, aes(x = Final.Calf.BW)) +
geom_histogram(binwidth = bin_width, color = "black", fill = "skyblue") +
labs(
x = "Weight",
y = "Frequency"
) +
theme_minimal()
ggplot(data, aes(sample = Final.Calf.BW)) +
stat_qq() +
stat_qq_line(color = "red") +
labs(
x = "Theoretical Quantiles",
y = "Sample Quantiles"
) +
theme_minimal()
#| label: fig-scoring-dist
#| echo: false
#| eval: true
#| fig-cap: "Histograms of scoring variables."
#| layout-ncol: 2
#| fig-subcap:
#|  - "Histogram of calving ease."
#|  - "Histogram of calf vigor."
#| fig-width: 6
#| fig-height: 4
ggplot(data, aes(x = Calving.Ease)) +
geom_histogram(binwidth = 1, color = "black", fill = "skyblue") +
labs(
x = "Ease Score",
y = "Frequency"
) +
theme_minimal()
ggplot(data, aes(x = Calf.Vigor)) +
geom_histogram(binwidth = 1, color = "black", fill = "skyblue") +
labs(
x = "Vigor Score",
y = "Frequency"
) +
theme_minimal()
#| label: fig-table
#| echo: false
#| eval: true
#| fig-cap: "Table showing the breakdown of treatment by sex."
## Toma data set
#data2 <- read.csv("imput_data.csv")
## Ryan data set
data2 <- cleaned_data
crosstab_treatment_sex <- table(data2$Calan.Treatment, data2$SEX)
crosstab_df <- as.data.frame(crosstab_treatment_sex)
kable(
crosstab_treatment_sex)
#| label: fig-OLS-Ease
#| echo: false
#| eval: true
data2$Calving.Ease <- factor(data2$Calving.Ease, ordered = TRUE)
ease_model_3 <- polr(Calving.Ease ~ Calan.Treatment * SEX, data = data2, Hess = TRUE)
summary(ease_model_3)
# Extract p-values
coefs <- coef(summary(ease_model_3))
p_values <- pnorm(abs(coefs[, "t value"]), lower.tail = FALSE) * 2  # Two-tailed p-values
coefs <- cbind(coefs, "p-value" = p_values)
print(coefs)
coefs <- coef(summary(ease_model_3))
p_values <- pnorm(abs(coefs[, "t value"]), lower.tail = FALSE) * 2  # Two-tailed p-values
coefs <- cbind(coefs, "p-value" = p_values)
print(coefs)
summary(ease_model_3)
#| label: fig-multicol
#| echo: false
#| eval: true
#| fig-cap: "Scatterplot of treatment vs. sex."
#| fig-width: 6
#| fig-height: 4
ggplot(cleaned_data, aes(x = SEC, y = Calan.Treatment)) +
geom_point() +
labs(title = "Scatterplot of SEC vs Calan.Treatment") +
theme_minimal()
#| label: fig-multicol
#| echo: false
#| eval: true
#| fig-cap: "Scatterplot of treatment vs. sex."
#| fig-width: 6
#| fig-height: 4
ggplot(cleaned_data, aes(x = SEX, y = Calan.Treatment)) +
geom_point() +
labs(title = "Scatterplot of SEC vs Calan.Treatment") +
theme_minimal()
contingency_table <- table(data$SEC, data$Calan.Treatment)
contingency_table <- table(data$SEX, data$Calan.Treatment)
chi_sq_test <- chisq.test(contingency_table)
print(chi_sq_test)
contingency_table
crosstab_treatment_sex
chi_sq_test <- chisq.test(crosstab_treatment_sex)
print(chi_sq_test)
print(chi_sq_test)
#| label: fig-chi
#| echo: false
#| eval: true
#| fig-cap: "Chi-squared test for treatment and sex."
chi_sq_test <- chisq.test(crosstab_treatment_sex)
#print(chi_sq_test)
cat("Chi-Square Statistic:", chi_sq_test$statistic, "\n")
cat("Degrees of Freedom:", chi_sq_test$parameter, "\n")
cat("P-Value:", chi_sq_test$p.value, "\n")
#| label: fig-chi
#| echo: false
#| eval: true
#| fig-cap: "Chi-squared test for treatment and sex."
chi_sq_test <- chisq.test(crosstab_treatment_sex)
chi_sq_table <- data.frame(
Statistic = round(chi_sq_test$statistic, 2),
`Degrees of Freedom` = chi_sq_test$parameter,
`P-Value` = format.pval(chi_sq_test$p.value)
)
kable(chi_sq_table)
#| label: fig-chi
#| echo: false
#| eval: true
#| fig-cap: "Chi-squared test for treatment and sex."
chi_sq_test <- chisq.test(crosstab_treatment_sex)
chi_sq_table <- data.frame(
Metric = c("Statistic", "Degrees of Freedom", "P-Value"),
Value = c(round(chi_sq_test$statistic, 2),
chi_sq_test$parameter,
format.pval(chi_sq_test$p.value))
)
kable(chi_sq_table)
chi_sq_table <- data.frame(
Metric = c("Statistic", "Degrees of Freedom", "P-Value"),
Value = c(round(chi_sq_test$statistic, 2),
chi_sq_test$parameter,
format.pval(chi_sq_test$p.value)),
stringsAsFactors = FALSE
)
kable(chi_sq_table)
kable(chi_sq_table, align = c("l", "c"), row.names = FALSE)
